#!/usr/bin/expect 
###########################################################################
###  用法
###      ./ssh_login.exp ${current_ip} ${current_user} ${current_passwd} ${current_home}
###  功能：
###     模拟远程登录机器，退出
###  参数：
###         current_ip      
###         current_user    
###         current_passwd  
###         current_home    
###  使用示例
###        ./ssh_login.exp 192.168.138.70 'root' '888888' '/root'
###        ./ssh_login.exp ht1.r1.n70     'parause' 'ParaUse@123&' '/home/parauser'
###########################################################################
# set current_ip      [lindex $argv 0]  
# set current_user    [lindex $argv 1]  
# set current_passwd  [lindex $argv 2]
# set current_home    [lindex $argv 3]
 set current_ip     "192.168.138.73" 
 set current_user   "root"
 set current_passwd "Tianpusen@1"
 set current_home   "/root"
set ssh_port       "22"
set timeout 30

puts "----------+---------- begin ----------+----------"
###############################################################################
### 通过spawn 启动进程执行 类似 ssh 192.168.138.70 -l root -p 22 操作
spawn ssh ${current_ip} -l ${current_user} -p ${ssh_port}
### 对ssh 操作的出现提示信息捕获，并通过 exp_send 发送响应结果
expect {
    #first connect, no public key in ~/.ssh/known_hosts
    "Are you sure you want to continue connecting (yes/no)?" {
        exp_send "yes\r"
        expect "password:" {
            exp_send "$current_passwd\r"
            ### 登录成功后响应
            expect "Last login*" {
                puts "++++++ $current_user login $current_ip successfully with spawn_id=$spawn_id"
            }
        }
    }
    #already has public key in ~/.ssh/known_hosts
    "password:" {
        exp_send "$current_passwd\r"
        ### 登录成功后响应
        expect "Last login*" {
            puts "++++++ $current_user login $current_ip successfully with spawn_id=$spawn_id"
        }
    }
    # has do authorize 直接成功登录
    "Last login*" {
        puts "++++++ $current_user login $current_ip successfully with spawn_id=$spawn_id"
    }
}

### 退出进程登录
exp_send "exit\r"
puts "----------+----------  end  ----------+----------"
